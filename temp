-file examples-asmeta/ethereum-via-asm/examples/AirdropAttack/Airdrop.asm -file examples-asmeta/ethereum-via-asm/examples/AirdropAttack/Airdrop.asm
load_file: /media/giusp/Windows/Users/Giuseppe/shared/Projects/asm-symbolic-execution/examples-asmeta/ethereum-via-asm/examples/AirdropAttack/Airdrop.asm
importing module: '../../lib/asmeta/CTLlibrary'
  --> '/media/giusp/Windows/Users/Giuseppe/shared/Projects/asm-symbolic-execution/examples-asmeta/ethereum-via-asm/lib/asmeta/CTLlibrary.asm'
importing module: 'StandardLibrary'
  --> '/media/giusp/Windows/Users/Giuseppe/shared/Projects/asm-symbolic-execution/examples-asmeta/ethereum-via-asm/lib/asmeta/StandardLibrary.asm'
warning: ignoring declaration of function 'div' already present in background signature
warning: ignoring declaration of function 'div' already present in background signature
warning: ignoring declaration of function 'div' already present in background signature
warning: ignoring declaration of function 'div' already present in background signature
warning: ignoring declaration of function 'or' already present in background signature
warning: ignoring declaration of function 'and' already present in background signature
warning: ignoring declaration of function 'not' already present in background signature
warning: ignoring declaration of function 'implies' already present in background signature
warning: ignoring declaration of function 'iff' already present in background signature
warning: ignoring declaration of function 'div' already present in background signature
warning: ignoring declaration of function 'div' already present in background signature
warning: ignoring declaration of function 'div' already present in background signature
warning: ignoring declaration of function 'div' already present in background signature
warning: ignoring declaration of function 'or' already present in background signature
warning: ignoring declaration of function 'and' already present in background signature
warning: ignoring declaration of function 'not' already present in background signature
warning: ignoring declaration of function 'implies' already present in background signature
warning: ignoring declaration of function 'iff' already present in background signature
parse_asm_with_header: |signature|=131
parse_asm_with_header: |signature|=150
importing module: '../../lib/asmeta/StandardLibrary'
  --> '/media/giusp/Windows/Users/Giuseppe/shared/Projects/asm-symbolic-execution/examples-asmeta/ethereum-via-asm/lib/asmeta/StandardLibrary.asm'  [skipped - already loaded]
importing module: '../../lib/attackers/SimpleReentrancyAttack'
  --> '/media/giusp/Windows/Users/Giuseppe/shared/Projects/asm-symbolic-execution/examples-asmeta/ethereum-via-asm/lib/attackers/SimpleReentrancyAttack.asm'
importing module: '../solidity/EVMlibrary'
  --> '/media/giusp/Windows/Users/Giuseppe/shared/Projects/asm-symbolic-execution/examples-asmeta/ethereum-via-asm/lib/solidity/EVMlibrary.asm'
importing module: '../asmeta/StandardLibrary'
  --> '/media/giusp/Windows/Users/Giuseppe/shared/Projects/asm-symbolic-execution/examples-asmeta/ethereum-via-asm/lib/asmeta/StandardLibrary.asm'  [skipped - already loaded]
parse_asm_with_header: |signature|=173
(|signature| = 173) get_fct_info(is_infix, -)
True
(|signature| = 173) get_fct_info(is_infix, -)
True
|signature| = 173 - FunctionDefinition 'is_contract'
(|signature| = 173) get_fct_info(fct_kind, is_contract)
True
(|signature| = 173) get_fct_info(fct_kind, is_contract)
True
(|signature| = 173) get_fct_info(is_infix, balance)
True
(|signature| = 173) get_fct_info(is_infix, >=)
True
(|signature| = 173) get_fct_info(infix_status, >=)
True
(|signature| = 173) get_fct_info(is_infix, and)
True
(|signature| = 173) get_fct_info(infix_status, and)
True
(|signature| = 173) get_fct_info(is_infix, >=)
True
(|signature| = 173) get_fct_info(infix_status, >=)
True
(|signature| = 173) get_fct_info(is_infix, and)
True
(|signature| = 173) get_fct_info(is_infix, destroyed)
True
(|signature| = 173) get_fct_info(infix_status, and)
True
(|signature| = 173) get_fct_info(is_infix, is_contract)
True
(|signature| = 173) get_fct_info(is_infix, and)
True
(|signature| = 173) get_fct_info(infix_status, and)
True
(|signature| = 173) get_fct_info(is_infix, >)
True
(|signature| = 173) get_fct_info(infix_status, >)
True
(|signature| = 173) get_fct_info(is_infix, implies)
True
(|signature| = 173) get_fct_info(is_infix, payable)
True
(|signature| = 173) get_fct_info(infix_status, implies)
True
(|signature| = 173) get_fct_info(is_infix, balance)
True
(|signature| = 173) get_fct_info(is_infix, >=)
True
(|signature| = 173) get_fct_info(infix_status, >=)
True
(|signature| = 173) get_fct_info(is_infix, and)
True
(|signature| = 173) get_fct_info(infix_status, and)
True
(|signature| = 173) get_fct_info(is_infix, >=)
True
(|signature| = 173) get_fct_info(infix_status, >=)
True
(|signature| = 173) get_fct_info(is_infix, and)
True
(|signature| = 173) get_fct_info(is_infix, destroyed)
True
(|signature| = 173) get_fct_info(infix_status, and)
True
(|signature| = 173) get_fct_info(is_infix, is_contract)
True
(|signature| = 173) get_fct_info(is_infix, and)
True
(|signature| = 173) get_fct_info(infix_status, and)
True
(|signature| = 173) get_fct_info(is_infix, >)
True
(|signature| = 173) get_fct_info(infix_status, >)
True
(|signature| = 173) get_fct_info(is_infix, implies)
True
(|signature| = 173) get_fct_info(is_infix, payable)
True
(|signature| = 173) get_fct_info(infix_status, implies)
True
(|signature| = 173) get_fct_info(is_infix, is_contract)
True
(|signature| = 173) get_fct_info(is_infix, and)
True
(|signature| = 173) get_fct_info(infix_status, and)
True
(|signature| = 173) get_fct_info(is_infix, >)
True
(|signature| = 173) get_fct_info(infix_status, >)
True
(|signature| = 173) get_fct_info(is_infix, implies)
True
(|signature| = 173) get_fct_info(is_infix, payable)
True
(|signature| = 173) get_fct_info(infix_status, implies)
True
(|signature| = 173) get_fct_info(is_infix, current_layer)
True
(|signature| = 173) get_fct_info(is_infix, current_layer)
True
(|signature| = 173) get_fct_info(is_infix, current_layer)
True
(|signature| = 173) get_fct_info(is_infix, balance)
True
(|signature| = 173) get_fct_info(is_infix, balance)
True
(|signature| = 173) get_fct_info(is_infix, -)
True
(|signature| = 173) get_fct_info(infix_status, -)
True
(|signature| = 173) get_fct_info(is_infix, balance)
True
(|signature| = 173) get_fct_info(fct_kind, balance)
True
(|signature| = 173) get_fct_info(is_infix, balance)
True
(|signature| = 173) get_fct_info(is_infix, balance)
True
(|signature| = 173) get_fct_info(is_infix, +)
True
(|signature| = 173) get_fct_info(infix_status, +)
True
(|signature| = 173) get_fct_info(fct_kind, balance)
True
(|signature| = 173) get_fct_info(is_infix, is_contract)
True
(|signature| = 173) get_fct_info(is_infix, is_contract)
True
(|signature| = 173) get_fct_info(is_infix, sender)
True
(|signature| = 173) get_fct_info(is_infix, +)
True
(|signature| = 173) get_fct_info(infix_status, +)
True
(|signature| = 173) get_fct_info(is_infix, amount)
True
(|signature| = 173) get_fct_info(fct_kind, sender)
True
(|signature| = 173) get_fct_info(is_infix, amount)
True
(|signature| = 173) get_fct_info(is_infix, +)
True
(|signature| = 173) get_fct_info(infix_status, +)
True
(|signature| = 173) get_fct_info(is_infix, current_layer)
True
(|signature| = 173) get_fct_info(fct_kind, amount)
True
(|signature| = 173) get_fct_info(is_infix, current_layer)
True
(|signature| = 173) get_fct_info(is_infix, current_layer)
True
(|signature| = 173) get_fct_info(is_infix, current_layer)
True
(|signature| = 173) get_fct_info(is_infix, +)
True
(|signature| = 173) get_fct_info(infix_status, +)
True
(|signature| = 173) get_fct_info(is_infix, executing_contract)
True
(|signature| = 173) get_fct_info(fct_kind, current_layer)
True
(|signature| = 173) get_fct_info(is_infix, executing_contract)
True
(|signature| = 173) get_fct_info(is_infix, +)
True
(|signature| = 173) get_fct_info(infix_status, +)
True
(|signature| = 173) get_fct_info(is_infix, executing_function)
True
(|signature| = 173) get_fct_info(fct_kind, executing_contract)
True
(|signature| = 173) get_fct_info(is_infix, executing_function)
True
(|signature| = 173) get_fct_info(is_infix, +)
True
(|signature| = 173) get_fct_info(infix_status, +)
True
(|signature| = 173) get_fct_info(is_infix, instruction_pointer)
True
(|signature| = 173) get_fct_info(fct_kind, executing_function)
True
(|signature| = 173) get_fct_info(is_infix, instruction_pointer)
True
(|signature| = 173) get_fct_info(is_infix, +)
True
(|signature| = 173) get_fct_info(infix_status, +)
True
(|signature| = 173) get_fct_info(fct_kind, instruction_pointer)
True
(|signature| = 173) get_fct_info(is_infix, is_contract)
True
(|signature| = 173) get_fct_info(is_infix, instruction_pointer)
True
(|signature| = 173) get_fct_info(is_infix, is_contract)
True
(|signature| = 173) get_fct_info(is_infix, instruction_pointer)
True
(|signature| = 173) get_fct_info(is_infix, instruction_pointer)
True
(|signature| = 173) get_fct_info(is_infix, +)
True
(|signature| = 173) get_fct_info(infix_status, +)
True
(|signature| = 173) get_fct_info(fct_kind, instruction_pointer)
True
(|signature| = 173) get_fct_info(is_infix, current_layer)
True
(|signature| = 173) get_fct_info(is_infix, current_layer)
True
(|signature| = 173) get_fct_info(is_infix, current_layer)
True
(|signature| = 173) get_fct_info(is_infix, current_layer)
True
(|signature| = 173) get_fct_info(is_infix, current_layer)
True
(|signature| = 173) get_fct_info(is_infix, current_layer)
True
(|signature| = 173) get_fct_info(is_infix, -)
True
(|signature| = 173) get_fct_info(infix_status, -)
True
(|signature| = 173) get_fct_info(fct_kind, current_layer)
True
(|signature| = 173) get_fct_info(is_infix, current_layer)
True
(|signature| = 173) get_fct_info(is_infix, current_layer)
True
(|signature| = 173) get_fct_info(is_infix, current_layer)
True
(|signature| = 173) get_fct_info(is_infix, instruction_pointer)
True
(|signature| = 173) get_fct_info(is_infix, instruction_pointer)
True
(|signature| = 173) get_fct_info(is_infix, instruction_pointer)
True
(|signature| = 173) get_fct_info(is_infix, +)
True
(|signature| = 173) get_fct_info(infix_status, +)
True
(|signature| = 173) get_fct_info(fct_kind, instruction_pointer)
True
(|signature| = 173) get_fct_info(is_infix, exception)
True
(|signature| = 173) get_fct_info(is_infix, exception)
True
(|signature| = 173) get_fct_info(is_infix, exception)
True
(|signature| = 173) get_fct_info(fct_kind, exception)
True
(|signature| = 173) get_fct_info(is_infix, is_contract)
True
(|signature| = 173) get_fct_info(is_infix, is_contract)
True
(|signature| = 173) get_fct_info(is_infix, balance)
True
(|signature| = 173) get_fct_info(is_infix, executing_contract)
True
(|signature| = 173) get_fct_info(is_infix, current_layer)
True
(|signature| = 173) get_fct_info(is_infix, current_layer)
True
(|signature| = 173) get_fct_info(is_infix, current_layer)
True
(|signature| = 173) get_fct_info(is_infix, balance)
True
(|signature| = 173) get_fct_info(fct_kind, balance)
True
(|signature| = 173) get_fct_info(is_infix, balance)
True
(|signature| = 173) get_fct_info(is_infix, balance)
True
(|signature| = 173) get_fct_info(is_infix, +)
True
(|signature| = 173) get_fct_info(is_infix, balance)
True
(|signature| = 173) get_fct_info(is_infix, executing_contract)
True
(|signature| = 173) get_fct_info(is_infix, current_layer)
True
(|signature| = 173) get_fct_info(is_infix, current_layer)
True
(|signature| = 173) get_fct_info(is_infix, current_layer)
True
(|signature| = 173) get_fct_info(infix_status, +)
True
(|signature| = 173) get_fct_info(is_infix, destroyed)
True
(|signature| = 173) get_fct_info(fct_kind, balance)
True
(|signature| = 173) get_fct_info(is_infix, destroyed)
True
(|signature| = 173) get_fct_info(is_infix, executing_contract)
True
(|signature| = 173) get_fct_info(is_infix, current_layer)
True
(|signature| = 173) get_fct_info(is_infix, current_layer)
True
(|signature| = 173) get_fct_info(is_infix, current_layer)
True
(|signature| = 173) get_fct_info(fct_kind, destroyed)
True
importing module: '../asmeta/StandardLibrary'
  --> '/media/giusp/Windows/Users/Giuseppe/shared/Projects/asm-symbolic-execution/examples-asmeta/ethereum-via-asm/lib/asmeta/StandardLibrary.asm'  [skipped - already loaded]
parse_asm_with_header: |signature|=175
(|signature| = 175) get_fct_info(is_infix, current_layer)
True
(|signature| = 175) get_fct_info(is_infix, current_layer)
True
(|signature| = 175) get_fct_info(is_infix, current_layer)
True
(|signature| = 175) get_fct_info(is_infix, sender)
True
(|signature| = 175) get_fct_info(is_infix, executing_function)
True
(|signature| = 175) get_fct_info(is_infix, =)
True
(|signature| = 175) get_fct_info(is_infix, attack)
True
(|signature| = 175) get_fct_info(is_infix, attack)
True
(|signature| = 175) get_fct_info(is_infix, attack)
True
(|signature| = 175) get_fct_info(infix_status, =)
True
(|signature| = 175) get_fct_info(is_infix, instruction_pointer)
True
(|signature| = 175) get_fct_info(is_infix, executing_function)
True
(|signature| = 175) get_fct_info(is_infix, =)
True
(|signature| = 175) get_fct_info(is_infix, attack)
True
(|signature| = 175) get_fct_info(is_infix, attack)
True
(|signature| = 175) get_fct_info(is_infix, attack)
True
(|signature| = 175) get_fct_info(infix_status, =)
True
(|signature| = 175) get_fct_info(is_infix, instruction_pointer)
True
(|signature| = 175) get_fct_info(is_infix, instruction_pointer)
True
(|signature| = 175) get_fct_info(is_infix, attacker)
True
(|signature| = 175) get_fct_info(is_infix, attacker)
True
(|signature| = 175) get_fct_info(is_infix, attacker)
True
(|signature| = 175) get_fct_info(is_infix, random_user)
True
(|signature| = 175) get_fct_info(is_infix, random_user)
True
(|signature| = 175) get_fct_info(is_infix, random_user)
True
(|signature| = 175) get_fct_info(is_infix, random_function)
True
(|signature| = 175) get_fct_info(is_infix, random_function)
True
(|signature| = 175) get_fct_info(is_infix, random_function)
True
(|signature| = 175) get_fct_info(is_infix, current_layer)
True
(|signature| = 175) get_fct_info(is_infix, current_layer)
True
(|signature| = 175) get_fct_info(is_infix, current_layer)
True
(|signature| = 175) get_fct_info(is_infix, executing_function)
True
(|signature| = 175) get_fct_info(is_infix, !=)
True
(|signature| = 175) get_fct_info(is_infix, attack)
True
(|signature| = 175) get_fct_info(is_infix, attack)
True
(|signature| = 175) get_fct_info(is_infix, attack)
True
(|signature| = 175) get_fct_info(infix_status, !=)
True
(|signature| = 175) get_fct_info(is_infix, instruction_pointer)
True
(|signature| = 175) get_fct_info(is_infix, executing_function)
True
(|signature| = 175) get_fct_info(is_infix, !=)
True
(|signature| = 175) get_fct_info(is_infix, attack)
True
(|signature| = 175) get_fct_info(is_infix, attack)
True
(|signature| = 175) get_fct_info(is_infix, attack)
True
(|signature| = 175) get_fct_info(infix_status, !=)
True
(|signature| = 175) get_fct_info(is_infix, instruction_pointer)
True
(|signature| = 175) get_fct_info(is_infix, instruction_pointer)
True
(|signature| = 175) get_fct_info(is_infix, attacker)
True
(|signature| = 175) get_fct_info(is_infix, attacker)
True
(|signature| = 175) get_fct_info(is_infix, attacker)
True
(|signature| = 175) get_fct_info(is_infix, sender)
True
(|signature| = 175) get_fct_info(is_infix, random_function)
True
(|signature| = 175) get_fct_info(is_infix, random_function)
True
(|signature| = 175) get_fct_info(is_infix, random_function)
True
(|signature| = 175) get_fct_info(is_infix, boolean_return)
True
(|signature| = 175) get_fct_info(is_infix, boolean_return)
True
(|signature| = 175) get_fct_info(is_infix, boolean_return)
True
(|signature| = 175) get_fct_info(fct_kind, boolean_return)
True
importing module: '../../lib/solidity/EVMlibrary'
  --> '/media/giusp/Windows/Users/Giuseppe/shared/Projects/asm-symbolic-execution/examples-asmeta/ethereum-via-asm/lib/solidity/EVMlibrary.asm'  [skipped - already loaded]
parse_asm_with_header: |signature|=182
(|signature| = 182) get_fct_info(is_infix, current_layer)
True
(|signature| = 182) get_fct_info(is_infix, current_layer)
True
(|signature| = 182) get_fct_info(is_infix, current_layer)
True
(|signature| = 182) get_fct_info(is_infix, sender)
True
(|signature| = 182) get_fct_info(is_infix, executing_function)
True
(|signature| = 182) get_fct_info(is_infix, =)
True
(|signature| = 182) get_fct_info(is_infix, receive_airdrop)
True
(|signature| = 182) get_fct_info(is_infix, receive_airdrop)
True
(|signature| = 182) get_fct_info(is_infix, receive_airdrop)
True
(|signature| = 182) get_fct_info(infix_status, =)
True
(|signature| = 182) get_fct_info(is_infix, instruction_pointer)
True
(|signature| = 182) get_fct_info(is_infix, executing_function)
True
(|signature| = 182) get_fct_info(is_infix, =)
True
(|signature| = 182) get_fct_info(is_infix, receive_airdrop)
True
(|signature| = 182) get_fct_info(is_infix, receive_airdrop)
True
(|signature| = 182) get_fct_info(is_infix, receive_airdrop)
True
(|signature| = 182) get_fct_info(infix_status, =)
True
(|signature| = 182) get_fct_info(is_infix, instruction_pointer)
True
(|signature| = 182) get_fct_info(is_infix, instruction_pointer)
True
(|signature| = 182) get_fct_info(is_infix, received_airdrop)
True
(|signature| = 182) get_fct_info(is_infix, sender)
True
(|signature| = 182) get_fct_info(is_infix, airdrop)
True
(|signature| = 182) get_fct_info(is_infix, airdrop)
True
(|signature| = 182) get_fct_info(is_infix, airdrop)
True
(|signature| = 182) get_fct_info(is_infix, sender)
True
(|signature| = 182) get_fct_info(is_infix, can_receive_airdrop)
True
(|signature| = 182) get_fct_info(is_infix, can_receive_airdrop)
True
(|signature| = 182) get_fct_info(is_infix, can_receive_airdrop)
True
(|signature| = 182) get_fct_info(is_infix, boolean_return)
True
(|signature| = 182) get_fct_info(is_infix, boolean_return)
True
(|signature| = 182) get_fct_info(is_infix, boolean_return)
True
(|signature| = 182) get_fct_info(is_infix, user_balance)
True
(|signature| = 182) get_fct_info(is_infix, sender)
True
(|signature| = 182) get_fct_info(is_infix, user_balance)
True
(|signature| = 182) get_fct_info(is_infix, sender)
True
(|signature| = 182) get_fct_info(is_infix, +)
True
(|signature| = 182) get_fct_info(is_infix, airdrop_amount)
True
(|signature| = 182) get_fct_info(is_infix, airdrop_amount)
True
(|signature| = 182) get_fct_info(is_infix, airdrop_amount)
True
(|signature| = 182) get_fct_info(infix_status, +)
True
(|signature| = 182) get_fct_info(is_infix, received_airdrop)
True
(|signature| = 182) get_fct_info(fct_kind, user_balance)
True
(|signature| = 182) get_fct_info(is_infix, received_airdrop)
True
(|signature| = 182) get_fct_info(is_infix, sender)
True
(|signature| = 182) get_fct_info(is_infix, instruction_pointer)
True
(|signature| = 182) get_fct_info(fct_kind, received_airdrop)
True
(|signature| = 182) get_fct_info(is_infix, instruction_pointer)
True
(|signature| = 182) get_fct_info(is_infix, instruction_pointer)
True
(|signature| = 182) get_fct_info(is_infix, +)
True
(|signature| = 182) get_fct_info(infix_status, +)
True
(|signature| = 182) get_fct_info(fct_kind, instruction_pointer)
True
(|signature| = 182) get_fct_info(is_infix, current_layer)
True
(|signature| = 182) get_fct_info(is_infix, current_layer)
True
(|signature| = 182) get_fct_info(is_infix, current_layer)
True
(|signature| = 182) get_fct_info(is_infix, executing_function)
True
(|signature| = 182) get_fct_info(is_infix, !=)
True
(|signature| = 182) get_fct_info(is_infix, receive_airdrop)
True
(|signature| = 182) get_fct_info(is_infix, receive_airdrop)
True
(|signature| = 182) get_fct_info(is_infix, receive_airdrop)
True
(|signature| = 182) get_fct_info(infix_status, !=)
True
(|signature| = 182) get_fct_info(is_infix, instruction_pointer)
True
(|signature| = 182) get_fct_info(is_infix, executing_function)
True
(|signature| = 182) get_fct_info(is_infix, !=)
True
(|signature| = 182) get_fct_info(is_infix, receive_airdrop)
True
(|signature| = 182) get_fct_info(is_infix, receive_airdrop)
True
(|signature| = 182) get_fct_info(is_infix, receive_airdrop)
True
(|signature| = 182) get_fct_info(infix_status, !=)
True
(|signature| = 182) get_fct_info(is_infix, instruction_pointer)
True
(|signature| = 182) get_fct_info(is_infix, instruction_pointer)
True
(|signature| = 182) get_fct_info(is_infix, user_balance)
True
(|signature| = 182) get_fct_info(is_infix, <=)
True
(|signature| = 182) get_fct_info(is_infix, airdrop_amount)
True
(|signature| = 182) get_fct_info(is_infix, airdrop_amount)
True
(|signature| = 182) get_fct_info(is_infix, airdrop_amount)
True
(|signature| = 182) get_fct_info(infix_status, <=)
True
(|signature| = 182) get_fct_info(is_infix, is_contract)
True
(|signature| = 182) get_fct_info(is_infix, executing_contract)
True
(|signature| = 182) get_fct_info(is_infix, current_layer)
True
(|signature| = 182) get_fct_info(is_infix, current_layer)
True
(|signature| = 182) get_fct_info(is_infix, current_layer)
True
(|signature| = 182) get_fct_info(is_infix, is_contract)
True
(|signature| = 182) get_fct_info(is_infix, executing_contract)
True
(|signature| = 182) get_fct_info(is_infix, current_layer)
True
(|signature| = 182) get_fct_info(is_infix, current_layer)
True
(|signature| = 182) get_fct_info(is_infix, current_layer)
True
(|signature| = 182) get_fct_info(is_infix, user)
True
(|signature| = 182) get_fct_info(is_infix, user)
True
(|signature| = 182) get_fct_info(is_infix, user)
True
(|signature| = 182) get_fct_info(is_infix, random_user)
True
(|signature| = 182) get_fct_info(is_infix, random_user)
True
(|signature| = 182) get_fct_info(is_infix, random_user)
True
(|signature| = 182) get_fct_info(is_infix, random_function)
True
(|signature| = 182) get_fct_info(is_infix, random_function)
True
(|signature| = 182) get_fct_info(is_infix, random_function)
True
(|signature| = 182) get_fct_info(is_infix, executing_contract)
True
(|signature| = 182) get_fct_info(is_infix, current_layer)
True
(|signature| = 182) get_fct_info(is_infix, current_layer)
True
(|signature| = 182) get_fct_info(is_infix, current_layer)
True
(|signature| = 182) get_fct_info(is_infix, =)
True
(|signature| = 182) get_fct_info(is_infix, airdrop)
True
(|signature| = 182) get_fct_info(is_infix, airdrop)
True
(|signature| = 182) get_fct_info(is_infix, airdrop)
True
(|signature| = 182) get_fct_info(infix_status, =)
True
(|signature| = 182) get_fct_info(is_infix, executing_contract)
True
(|signature| = 182) get_fct_info(is_infix, current_layer)
True
(|signature| = 182) get_fct_info(is_infix, current_layer)
True
(|signature| = 182) get_fct_info(is_infix, current_layer)
True
(|signature| = 182) get_fct_info(is_infix, =)
True
(|signature| = 182) get_fct_info(is_infix, airdrop)
True
(|signature| = 182) get_fct_info(is_infix, airdrop)
True
(|signature| = 182) get_fct_info(is_infix, airdrop)
True
(|signature| = 182) get_fct_info(infix_status, =)
True
(|signature| = 182) get_fct_info(is_infix, =)
True
(|signature| = 182) get_fct_info(infix_status, =)
True
(|signature| = 182) get_fct_info(is_infix, none)
True
(|signature| = 182) get_fct_info(is_infix, none)
True
(|signature| = 182) get_fct_info(is_infix, none)
True
(|signature| = 182) get_fct_info(fct_type, =)
True
(|signature| = 182) get_fct_info(fct_type, none)
True
(|signature| = 182) get_fct_info(fct_kind, executing_function)
True
(|signature| = 182) get_fct_info(is_infix, =)
True
(|signature| = 182) get_fct_info(infix_status, =)
True
(|signature| = 182) get_fct_info(is_infix, user)
True
(|signature| = 182) get_fct_info(is_infix, user)
True
(|signature| = 182) get_fct_info(is_infix, user)
True
(|signature| = 182) get_fct_info(fct_type, =)
True
(|signature| = 182) get_fct_info(fct_type, user)
True
(|signature| = 182) get_fct_info(fct_kind, executing_contract)
True
(|signature| = 182) get_fct_info(is_infix, =)
True
(|signature| = 182) get_fct_info(infix_status, =)
True
(|signature| = 182) get_fct_info(fct_type, =)
True
(|signature| = 182) get_fct_info(fct_kind, instruction_pointer)
True
(|signature| = 182) get_fct_info(fct_kind, current_layer)
True
(|signature| = 182) get_fct_info(fct_kind, balance)
True
(|signature| = 182) get_fct_info(fct_kind, destroyed)
True
(|signature| = 182) get_fct_info(is_infix, receive_airdrop)
True
(|signature| = 182) get_fct_info(is_infix, receive_airdrop)
True
(|signature| = 182) get_fct_info(is_infix, receive_airdrop)
True
(|signature| = 182) get_fct_info(is_infix, none)
True
(|signature| = 182) get_fct_info(is_infix, none)
True
(|signature| = 182) get_fct_info(is_infix, none)
True
(|signature| = 182) get_fct_info(fct_type, =)
True
(|signature| = 182) get_fct_info(fct_type, receive_airdrop)
True
(|signature| = 182) get_fct_info(fct_type, =)
True
(|signature| = 182) get_fct_info(fct_type, none)
True
(|signature| = 182) get_fct_info(fct_kind, payable)
True
(|signature| = 182) get_fct_info(fct_kind, exception)
True
(|signature| = 182) get_fct_info(fct_kind, user_balance)
True
(|signature| = 182) get_fct_info(fct_kind, received_airdrop)
True
(|signature| = 182) get_fct_info(fct_kind, airdrop_amount)
True
---
static function != : 'a, 'a -> Boolean
static function * : Integer, Integer -> Integer
static function + : Integer, Integer -> Integer
static function - : Integer, Integer -> Integer
static function < : Integer, Integer -> Boolean
static function <= : Integer, Integer -> Boolean
static function = : 'a, 'a -> Boolean
static function > : Integer, Integer -> Boolean
static function >= : Integer, Integer -> Boolean
type Agent(0)
type Any(0)
type Bag(1)
type Boolean(0)
type D(0)
type D1(0)
type D2(0)
type D3(0)
type D4(0)
type D5(0)
type D6(0)
type D7(0)
type D8(0)
type D9(0)
type Function(0)
type GeneralInteger(0)
type InstructionPointer(0)
type Integer(0)
type Map(2)
type MoneyAmount(0)
type Powerset(1)
type Reserve(0)
type Rule(0)
type Seq(1)
type StackLayer(0)
type String(0)
type Undef(0)
type User(0)
static function a : Integer, Integer -> Integer
static function abs : Real -> Real
static function abs : Integer -> Integer
static function abs : Natural -> Natural
static function absenceAfter : Integer, Integer -> Integer
static function absenceAfterUntil : Integer, Integer, Integer -> Integer
static function absenceBefore : Integer, Integer -> Integer
static function absenceBetween : Integer, Integer, Integer -> Integer
static function absenceG : Integer -> Integer
static function af : Integer -> Integer
static function ag : Integer -> Integer
static function airdrop :  -> User
controlled function airdrop_amount :  -> Integer
static function allin : Powerset('D), Powerset('D) -> Integer
controlled function amount : Integer -> Integer
static function and : Boolean, Boolean -> Boolean
static function ap : Integer, Integer -> Integer
static function append : Seq('D), 'D -> Seq('D)
static function asBag : Powerset('D) -> Bag('D)
static function asBag : Seq('D) -> Bag('D)
static function asSequence : Powerset('D) -> Seq('D)
static function asSequence : Bag('D) -> Seq('D)
static function asSet : Seq('D) -> Powerset('D)
static function asSet : Bag('D) -> Powerset('D)
static function assign : Map('D1, 'D2), 'D1, 'D2 -> Map('D1, 'D2)
static function at : Seq('D), Natural -> 'D
static function at : Map('D1, 'D2), 'D1 -> 'D2
static function at : Prod('D1, 'D2), Natural -> 'Any
static function at : Prod('D1, 'D2, 'D3), Natural -> 'Any
static function at : Prod('D1, 'D2, 'D3, 'D4), Natural -> 'Any
static function attack :  -> Function
static function attacker :  -> User
static function aw : Integer, Integer -> Integer
static function ax : Integer -> Integer
static function axN : Integer, Natural -> Integer
controlled function balance : User -> Integer
controlled function boolean_return :  -> Integer
static function can_receive_airdrop :  -> Function
controlled function can_receive_airdrop_return :  -> Integer
static function chooseone : Powerset('D) -> 'D
static function concat : String, String -> String
static function contains : String, String -> Integer
static function contains : Powerset('D), 'D -> Integer
static function contains : Seq('D), 'D -> Integer
static function contains : Bag('D), 'D -> Integer
static function count : Seq('D), 'D -> Natural
static function count : Bag('D), 'D -> Natural
static function currTimeMillisecs :  -> Integer
static function currTimeNanosecs :  -> Integer
static function currTimeSecs :  -> Integer
controlled function current_layer :  -> Integer
controlled function destroyed : User -> Integer
static function difference : Powerset('D), Powerset('D) -> Powerset('D)
static function div : Integer, Integer -> Integer
static function e : Integer, Integer -> Integer
static function ef : Integer -> Integer
static function eg : Integer -> Integer
static function eighth : 'D1, 'D2, 'D3, 'D4, 'D5, 'D6, 'D7, 'D8 -> 'D8
static function eighth : 'D1, 'D2, 'D3, 'D4, 'D5, 'D6, 'D7, 'D8, 'D9 -> 'D8
static function eq : 'D, 'D -> Integer
static function eq : Natural, Integer -> Integer
static function eq : Integer, Natural -> Integer
static function eq : Real, Natural -> Integer
static function eq : Natural, Real -> Integer
static function eq : Real, Integer -> Integer
static function eq : Integer, Real -> Integer
static function eq : Agent, Agent -> Integer
static function equality : Powerset('D), Powerset('D) -> Integer
static function ew : Integer, Integer -> Integer
static function ex : Integer -> Integer
static function exN : Integer, Natural -> Integer
controlled function exception :  -> Integer
static function excluding : Powerset('D), 'D -> Powerset('D)
static function excluding : Seq('D), 'D -> Seq('D)
static function excluding : Bag('D), 'D -> Bag('D)
controlled function executing_contract : Integer -> User
controlled function executing_function : Integer -> Function
static function fifth : 'D1, 'D2, 'D3, 'D4, 'D5 -> 'D5
static function fifth : 'D1, 'D2, 'D3, 'D4, 'D5, 'D6 -> 'D5
static function fifth : 'D1, 'D2, 'D3, 'D4, 'D5, 'D6, 'D7 -> 'D5
static function fifth : 'D1, 'D2, 'D3, 'D4, 'D5, 'D6, 'D7, 'D8 -> 'D5
static function fifth : 'D1, 'D2, 'D3, 'D4, 'D5, 'D6, 'D7, 'D8, 'D9 -> 'D5
static function first : Seq('D) -> 'D
static function first : 'D1, 'D2 -> 'D1
static function first : 'D1, 'D2, 'D3 -> 'D1
static function first : 'D1, 'D2, 'D3, 'D4 -> 'D1
static function first : 'D1, 'D2, 'D3, 'D4, 'D5 -> 'D1
static function first : 'D1, 'D2, 'D3, 'D4, 'D5, 'D6 -> 'D1
static function first : 'D1, 'D2, 'D3, 'D4, 'D5, 'D6, 'D7 -> 'D1
static function first : 'D1, 'D2, 'D3, 'D4, 'D5, 'D6, 'D7, 'D8 -> 'D1
static function first : 'D1, 'D2, 'D3, 'D4, 'D5, 'D6, 'D7, 'D8, 'D9 -> 'D1
static function floor : Real -> Integer
static function fourth : 'D1, 'D2, 'D3, 'D4 -> 'D4
static function fourth : 'D1, 'D2, 'D3, 'D4, 'D5 -> 'D4
static function fourth : 'D1, 'D2, 'D3, 'D4, 'D5, 'D6 -> 'D4
static function fourth : 'D1, 'D2, 'D3, 'D4, 'D5, 'D6, 'D7 -> 'D4
static function fourth : 'D1, 'D2, 'D3, 'D4, 'D5, 'D6, 'D7, 'D8 -> 'D4
static function fourth : 'D1, 'D2, 'D3, 'D4, 'D5, 'D6, 'D7, 'D8, 'D9 -> 'D4
static function ge : Real, Real -> Integer
static function ge : Integer, Integer -> Integer
static function ge : Natural, Natural -> Integer
static function ge : Char, Char -> Integer
static function getAgent : String -> Agent
static function gt : Real, Real -> Integer
static function gt : Integer, Integer -> Integer
static function gt : Natural, Integer -> Integer
static function gt : Integer, Natural -> Integer
static function gt : Natural, Natural -> Integer
static function gt : Char, Char -> Integer
static function id : Agent -> String
static function idiv : Integer, Integer -> Integer
static function idiv : Natural, Natural -> Natural
static function iff : Boolean, Boolean -> Boolean
static function im : Complex -> Real
static function implies : Boolean, Boolean -> Boolean
static function including : Powerset('D), 'D -> Powerset('D)
static function including : Bag('D), 'D -> Bag('D)
static function indexOf : Seq('D), 'D -> Integer
static function indexOf : Prod('D1, 'D2), 'Any -> Integer
static function indexOf : Prod('D1, 'D2, 'D3), 'Any -> Integer
static function indexOf : Prod('D1, 'D2, 'D3, 'D4), 'Any -> Integer
static function insertAt : Seq('D), Natural, 'D -> Seq('D)
controlled function instruction_pointer : Integer -> Integer
static function intersection : Powerset('D), Powerset('D) -> Powerset('D)
static function intersection : Powerset('D), Bag('D) -> Powerset('D)
static function intersection : Bag('D), Bag('D) -> Bag('D)
static function intersection : Bag('D), Powerset('D) -> Bag('D)
static function isDef : 'D -> Integer
static function isEmpty : Powerset('D) -> Integer
static function isEmpty : Seq('D) -> Integer
static function isUndef : 'D -> Integer
derived function is_contract : User -> Integer
static function iszero : Complex -> Integer
static function iton : Integer -> Natural
static function itor : Integer -> Real
static function last : Seq('D) -> 'D
static function le : Real, Real -> Integer
static function le : Integer, Integer -> Integer
static function le : Natural, Natural -> Integer
static function le : Char, Char -> Integer
static function length : Seq('D) -> Integer
static function lt : Real, Real -> Integer
static function lt : Integer, Integer -> Integer
static function lt : Natural, Natural -> Integer
static function lt : Char, Char -> Integer
static function max : Real, Real -> Real
static function max : Integer, Integer -> Integer
static function max : Natural, Natural -> Natural
static function merge : Map('D1, 'D2), Map('D1, 'D2) -> Map('D1, 'D2)
static function min : Real, Real -> Real
static function min : Integer, Integer -> Integer
static function min : Natural, Natural -> Natural
static function minus : Complex, Complex -> Complex
static function minus : Complex -> Complex
static function minus : Real -> Real
static function minus : Real, Real -> Real
static function minus : Integer -> Integer
static function minus : Integer, Integer -> Integer
static function minus : Natural, Natural -> Integer
static function mod : Integer, Integer -> Integer
static function mod : Integer, Natural -> Integer
static function mod : Natural, Integer -> Integer
static function mod : Natural, Natural -> Natural
static function mult : Complex, Complex -> Complex
static function mult : Real, Real -> Real
static function mult : Integer, Integer -> Integer
static function mult : Natural, Integer -> Integer
static function mult : Integer, Natural -> Integer
static function mult : Natural, Natural -> Natural
static function neq : 'D, 'D -> Integer
static function neq : Agent, Agent -> Integer
static function ninth : 'D1, 'D2, 'D3, 'D4, 'D5, 'D6, 'D7, 'D8, 'D9 -> 'D9
static function none :  -> Function
static function norm : Complex -> Complex
static function not : Boolean -> Boolean
static function notEmpty : Powerset('D) -> Integer
static function notallin : Powerset('D), Powerset('D) -> Integer
static function notin : Powerset('D), 'D -> Integer
static function ntoi : Natural -> Integer
static function ntor : Natural -> Real
static function or : Boolean, Boolean -> Boolean
controlled function payable : Function -> Integer
static function pb : Integer, Integer, Integer -> Integer
static function plus : Complex, Complex -> Complex
static function plus : Real -> Real
static function plus : Real, Real -> Real
static function plus : Integer -> Integer
static function plus : Integer, Integer -> Integer
static function plus : Natural, Natural -> Natural
static function plus : String, String -> String
static function pre : 'D -> 'D
static function prepend : 'D, Seq('D) -> Seq('D)
static function print : 'D -> Integer
static function print : 'D, 'D1 -> Integer
static function print : 'D, 'D1, 'D2 -> Integer
static function print : 'D, 'D1, 'D2, 'D3 -> Integer
static function print : 'D, 'D1, 'D2, 'D3, 'D4 -> Integer
static function print : 'D, 'D1, 'D2, 'D3, 'D4, 'D5 -> Integer
static function print : 'D, 'D1, 'D2, 'D3, 'D4, 'D5, 'D6 -> Integer
static function print : 'D, 'D1, 'D2, 'D3, 'D4, 'D5, 'D6, 'D7 -> Integer
static function print : 'D, 'D1, 'D2, 'D3, 'D4, 'D5, 'D6, 'D7, 'D8 -> Integer
static function print : 'D, 'D1, 'D2, 'D3, 'D4, 'D5, 'D6, 'D7, 'D8, 'D9 -> Integer
static function program : Agent -> Rule
static function pwr : Real, Real -> Real
monitored function random_amount :  -> Integer
monitored function random_function :  -> Function
monitored function random_user :  -> User
static function range : Natural, Natural -> Powerset(Natural)
static function re : Complex -> Real
static function receive_airdrop :  -> Function
controlled function received_airdrop : User -> Integer
static function replaceAt : Seq('D), Natural, 'D -> Seq('D)
controlled function result :  -> 'Any
static function round : Real -> Integer
static function rtoi : Real -> Integer
static function rton : Real -> Natural
static function second : 'D1, 'D2 -> 'D2
static function second : 'D1, 'D2, 'D3 -> 'D2
static function second : 'D1, 'D2, 'D3, 'D4 -> 'D2
static function second : 'D1, 'D2, 'D3, 'D4, 'D5 -> 'D2
static function second : 'D1, 'D2, 'D3, 'D4, 'D5, 'D6 -> 'D2
static function second : 'D1, 'D2, 'D3, 'D4, 'D5, 'D6, 'D7 -> 'D2
static function second : 'D1, 'D2, 'D3, 'D4, 'D5, 'D6, 'D7, 'D8 -> 'D2
static function second : 'D1, 'D2, 'D3, 'D4, 'D5, 'D6, 'D7, 'D8, 'D9 -> 'D2
controlled function self :  -> Agent
controlled function sender : Integer -> User
static function seventh : 'D1, 'D2, 'D3, 'D4, 'D5, 'D6, 'D7 -> 'D7
static function seventh : 'D1, 'D2, 'D3, 'D4, 'D5, 'D6, 'D7, 'D8 -> 'D7
static function seventh : 'D1, 'D2, 'D3, 'D4, 'D5, 'D6, 'D7, 'D8, 'D9 -> 'D7
static function sixth : 'D1, 'D2, 'D3, 'D4, 'D5, 'D6 -> 'D6
static function sixth : 'D1, 'D2, 'D3, 'D4, 'D5, 'D6, 'D7 -> 'D6
static function sixth : 'D1, 'D2, 'D3, 'D4, 'D5, 'D6, 'D7, 'D8 -> 'D6
static function sixth : 'D1, 'D2, 'D3, 'D4, 'D5, 'D6, 'D7, 'D8, 'D9 -> 'D6
static function size : String -> Integer
static function size : Powerset('D) -> Integer
static function split : String, String -> Seq(String)
static function sqrt : Real -> Real
static function subSequence : Seq('D), Natural, Natural -> Seq('D)
static function subString : String, Integer, Integer -> String
static function sum : Powerset('D) -> 'D
static function sum : Bag('D) -> 'D
static function symmetricDifference : Powerset('D), Powerset('D) -> Powerset('D)
static function tail : Seq('D) -> Seq('D)
static function third : 'D1, 'D2, 'D3 -> 'D3
static function third : 'D1, 'D2, 'D3, 'D4 -> 'D3
static function third : 'D1, 'D2, 'D3, 'D4, 'D5 -> 'D3
static function third : 'D1, 'D2, 'D3, 'D4, 'D5, 'D6 -> 'D3
static function third : 'D1, 'D2, 'D3, 'D4, 'D5, 'D6, 'D7 -> 'D3
static function third : 'D1, 'D2, 'D3, 'D4, 'D5, 'D6, 'D7, 'D8 -> 'D3
static function third : 'D1, 'D2, 'D3, 'D4, 'D5, 'D6, 'D7, 'D8, 'D9 -> 'D3
static function toChar : String -> Char
static function toComplex : String -> Complex
static function toInteger : String -> Integer
static function toLower : String -> String
static function toNatural : String -> Natural
static function toReal : String -> Real
static function toString : Complex -> String
static function toString : Real -> String
static function toString : Integer -> String
static function toString : Natural -> String
static function toString : Char -> String
static function toString : 'D -> String
static function toUpper : String -> String
static function union : Powerset('D), Powerset('D) -> Powerset('D)
static function union : Powerset('D), Bag('D) -> Bag('D)
static function union : Powerset('D), Powerset('D1) -> Powerset('D2)
static function union : Seq('D), Seq('D) -> Seq('D)
static function union : Bag('D), Bag('D) -> Bag('D)
static function union : Bag('D), Powerset('D) -> Bag('D)
static function user :  -> User
controlled function user_balance : User -> Integer
static function xor : Integer, Integer -> Integer

---
(|signature| = 182) get_fct_info(fct_kind, fifth)
True
(|signature| = 182) get_fct_info(fct_kind, pre)
True
(|signature| = 182) get_fct_info(fct_kind, sqrt)
True
(|signature| = 182) get_fct_info(fct_kind, toLower)
True
(|signature| = 182) get_fct_info(fct_kind, toUpper)
True
(|signature| = 182) get_fct_info(fct_kind, user_balance)
True
(|signature| = 182) get_fct_info(fct_kind, xor)
True
(|signature| = 182) get_fct_info(fct_kind, union)
True
(|signature| = 182) get_fct_info(fct_kind, user)
True
(|signature| = 182) get_fct_info(fct_kind, toString)
True
(|signature| = 182) get_fct_info(fct_kind, toNatural)
True
(|signature| = 182) get_fct_info(fct_kind, toReal)
True
(|signature| = 182) get_fct_info(fct_kind, symmetricDifference)
True
(|signature| = 182) get_fct_info(fct_kind, toChar)
True
(|signature| = 182) get_fct_info(fct_kind, toInteger)
True
(|signature| = 182) get_fct_info(fct_kind, toComplex)
True
(|signature| = 182) get_fct_info(fct_kind, tail)
True
(|signature| = 182) get_fct_info(fct_kind, third)
True
(|signature| = 182) get_fct_info(fct_kind, sum)
True
(|signature| = 182) get_fct_info(fct_kind, subSequence)
True
(|signature| = 182) get_fct_info(fct_kind, subString)
True
(|signature| = 182) get_fct_info(fct_kind, replaceAt)
True
(|signature| = 182) get_fct_info(fct_kind, self)
True
(|signature| = 182) get_fct_info(fct_kind, sixth)
True
(|signature| = 182) get_fct_info(fct_kind, size)
True
(|signature| = 182) get_fct_info(fct_kind, split)
True
(|signature| = 182) get_fct_info(fct_kind, sender)
True
(|signature| = 182) get_fct_info(fct_kind, seventh)
True
(|signature| = 182) get_fct_info(fct_kind, rtoi)
True
(|signature| = 182) get_fct_info(fct_kind, second)
True
(|signature| = 182) get_fct_info(fct_kind, rton)
True
(|signature| = 182) get_fct_info(fct_kind, result)
True
(|signature| = 182) get_fct_info(fct_kind, round)
True
(|signature| = 182) get_fct_info(fct_kind, range)
True
(|signature| = 182) get_fct_info(fct_kind, received_airdrop)
True
(|signature| = 182) get_fct_info(fct_kind, re)
True
(|signature| = 182) get_fct_info(fct_kind, receive_airdrop)
True
(|signature| = 182) get_fct_info(fct_kind, random_amount)
True
(|signature| = 182) get_fct_info(fct_kind, random_function)
True
(|signature| = 182) get_fct_info(fct_kind, random_user)
True
(|signature| = 182) get_fct_info(fct_kind, print)
True
(|signature| = 182) get_fct_info(fct_kind, program)
True
(|signature| = 182) get_fct_info(fct_kind, pwr)
True
(|signature| = 182) get_fct_info(fct_kind, prepend)
True
(|signature| = 182) get_fct_info(fct_kind, max)
True
(|signature| = 182) get_fct_info(fct_kind, notin)
True
(|signature| = 182) get_fct_info(fct_kind, payable)
True
(|signature| = 182) get_fct_info(fct_kind, pb)
True
(|signature| = 182) get_fct_info(fct_kind, plus)
True
(|signature| = 182) get_fct_info(fct_kind, ntoi)
True
(|signature| = 182) get_fct_info(fct_kind, ntor)
True
(|signature| = 182) get_fct_info(fct_kind, or)
True
(|signature| = 182) get_fct_info(fct_kind, none)
True
(|signature| = 182) get_fct_info(fct_kind, not)
True
(|signature| = 182) get_fct_info(fct_kind, notEmpty)
True
(|signature| = 182) get_fct_info(fct_kind, notallin)
True
(|signature| = 182) get_fct_info(fct_kind, norm)
True
(|signature| = 182) get_fct_info(fct_kind, neq)
True
(|signature| = 182) get_fct_info(fct_kind, ninth)
True
(|signature| = 182) get_fct_info(fct_kind, minus)
True
(|signature| = 182) get_fct_info(fct_kind, mult)
True
(|signature| = 182) get_fct_info(fct_kind, mod)
True
(|signature| = 182) get_fct_info(fct_kind, merge)
True
(|signature| = 182) get_fct_info(fct_kind, min)
True
(|signature| = 182) get_fct_info(fct_kind, intersection)
True
(|signature| = 182) get_fct_info(fct_kind, last)
True
(|signature| = 182) get_fct_info(fct_kind, lt)
True
(|signature| = 182) get_fct_info(fct_kind, le)
True
(|signature| = 182) get_fct_info(fct_kind, length)
True
(|signature| = 182) get_fct_info(fct_kind, iszero)
True
(|signature| = 182) get_fct_info(fct_kind, iton)
True
(|signature| = 182) get_fct_info(fct_kind, itor)
True
(|signature| = 182) get_fct_info(fct_kind, isEmpty)
True
(|signature| = 182) get_fct_info(fct_kind, isUndef)
True
(|signature| = 182) get_fct_info(fct_kind, is_contract)
True
(|signature| = 182) get_fct_info(fct_kind, isDef)
True
(|signature| = 182) get_fct_info(fct_kind, iff)
True
(|signature| = 182) get_fct_info(fct_kind, indexOf)
True
(|signature| = 182) get_fct_info(fct_kind, insertAt)
True
(|signature| = 182) get_fct_info(fct_kind, instruction_pointer)
True
(|signature| = 182) get_fct_info(fct_kind, im)
True
(|signature| = 182) get_fct_info(fct_kind, implies)
True
(|signature| = 182) get_fct_info(fct_kind, including)
True
(|signature| = 182) get_fct_info(fct_kind, ge)
True
(|signature| = 182) get_fct_info(fct_kind, gt)
True
(|signature| = 182) get_fct_info(fct_kind, id)
True
(|signature| = 182) get_fct_info(fct_kind, idiv)
True
(|signature| = 182) get_fct_info(fct_kind, getAgent)
True
(|signature| = 182) get_fct_info(fct_kind, fourth)
True
(|signature| = 182) get_fct_info(fct_kind, first)
True
(|signature| = 182) get_fct_info(fct_kind, floor)
True
(|signature| = 182) get_fct_info(fct_kind, currTimeMillisecs)
True
(|signature| = 182) get_fct_info(fct_kind, ew)
True
(|signature| = 182) get_fct_info(fct_kind, excluding)
True
(|signature| = 182) get_fct_info(fct_kind, executing_contract)
True
(|signature| = 182) get_fct_info(fct_kind, executing_function)
True
(|signature| = 182) get_fct_info(fct_kind, ex)
True
(|signature| = 182) get_fct_info(fct_kind, exN)
True
(|signature| = 182) get_fct_info(fct_kind, exception)
True
(|signature| = 182) get_fct_info(fct_kind, ef)
True
(|signature| = 182) get_fct_info(fct_kind, eighth)
True
(|signature| = 182) get_fct_info(fct_kind, eq)
True
(|signature| = 182) get_fct_info(fct_kind, equality)
True
(|signature| = 182) get_fct_info(fct_kind, eg)
True
(|signature| = 182) get_fct_info(fct_kind, difference)
True
(|signature| = 182) get_fct_info(fct_kind, div)
True
(|signature| = 182) get_fct_info(fct_kind, e)
True
(|signature| = 182) get_fct_info(fct_kind, currTimeSecs)
True
(|signature| = 182) get_fct_info(fct_kind, current_layer)
True
(|signature| = 182) get_fct_info(fct_kind, destroyed)
True
(|signature| = 182) get_fct_info(fct_kind, currTimeNanosecs)
True
(|signature| = 182) get_fct_info(fct_kind, aw)
True
(|signature| = 182) get_fct_info(fct_kind, chooseone)
True
(|signature| = 182) get_fct_info(fct_kind, count)
True
(|signature| = 182) get_fct_info(fct_kind, concat)
True
(|signature| = 182) get_fct_info(fct_kind, contains)
True
(|signature| = 182) get_fct_info(fct_kind, boolean_return)
True
(|signature| = 182) get_fct_info(fct_kind, can_receive_airdrop)
True
(|signature| = 182) get_fct_info(fct_kind, can_receive_airdrop_return)
True
(|signature| = 182) get_fct_info(fct_kind, ax)
True
(|signature| = 182) get_fct_info(fct_kind, axN)
True
(|signature| = 182) get_fct_info(fct_kind, balance)
True
(|signature| = 182) get_fct_info(fct_kind, absenceG)
True
(|signature| = 182) get_fct_info(fct_kind, ap)
True
(|signature| = 182) get_fct_info(fct_kind, asSet)
True
(|signature| = 182) get_fct_info(fct_kind, at)
True
(|signature| = 182) get_fct_info(fct_kind, attack)
True
(|signature| = 182) get_fct_info(fct_kind, attacker)
True
(|signature| = 182) get_fct_info(fct_kind, assign)
True
(|signature| = 182) get_fct_info(fct_kind, asSequence)
True
(|signature| = 182) get_fct_info(fct_kind, append)
True
(|signature| = 182) get_fct_info(fct_kind, asBag)
True
(|signature| = 182) get_fct_info(fct_kind, allin)
True
(|signature| = 182) get_fct_info(fct_kind, amount)
True
(|signature| = 182) get_fct_info(fct_kind, and)
True
(|signature| = 182) get_fct_info(fct_kind, ag)
True
(|signature| = 182) get_fct_info(fct_kind, airdrop)
True
(|signature| = 182) get_fct_info(fct_kind, airdrop_amount)
True
(|signature| = 182) get_fct_info(fct_kind, af)
True
(|signature| = 182) get_fct_info(fct_kind, abs)
True
(|signature| = 182) get_fct_info(fct_kind, absenceBefore)
True
(|signature| = 182) get_fct_info(fct_kind, absenceBetween)
True
(|signature| = 182) get_fct_info(fct_kind, absenceAfterUntil)
True
(|signature| = 182) get_fct_info(fct_kind, absenceAfter)
True
(|signature| = 182) get_fct_info(fct_kind, >)
True
(|signature| = 182) get_fct_info(fct_kind, >=)
True
(|signature| = 182) get_fct_info(fct_kind, a)
True
(|signature| = 182) get_fct_info(fct_kind, <=)
True
(|signature| = 182) get_fct_info(fct_kind, =)
True
(|signature| = 182) get_fct_info(fct_kind, +)
True
(|signature| = 182) get_fct_info(fct_kind, <)
True
(|signature| = 182) get_fct_info(fct_kind, -)
True
(|signature| = 182) get_fct_info(fct_kind, !=)
True
(|signature| = 182) get_fct_info(fct_kind, *)
True
(|signature| = 182) get_fct_info(fct_type, airdrop_amount)
True
SmtInterface.add_function: airdrop_amount :  -> Integer
(|signature| = 182) get_fct_info(fct_type, airdrop_amount)
True
(|signature| = 182) get_fct_info(fct_type, amount)
True
SmtInterface.add_function: amount : Integer -> Integer
(|signature| = 182) get_fct_info(fct_type, amount)
True
(|signature| = 182) get_fct_info(fct_type, balance)
True
SmtInterface.add_function: balance : User -> Integer
(|signature| = 182) get_fct_info(fct_type, balance)
True
(|signature| = 182) get_fct_info(fct_type, boolean_return)
True
SmtInterface.add_function: boolean_return :  -> Integer
(|signature| = 182) get_fct_info(fct_type, boolean_return)
True
(|signature| = 182) get_fct_info(fct_type, can_receive_airdrop_return)
True
SmtInterface.add_function: can_receive_airdrop_return :  -> Integer
(|signature| = 182) get_fct_info(fct_type, can_receive_airdrop_return)
True
(|signature| = 182) get_fct_info(fct_type, current_layer)
True
SmtInterface.add_function: current_layer :  -> Integer
(|signature| = 182) get_fct_info(fct_type, current_layer)
True
(|signature| = 182) get_fct_info(fct_type, destroyed)
True
SmtInterface.add_function: destroyed : User -> Integer
(|signature| = 182) get_fct_info(fct_type, destroyed)
True
(|signature| = 182) get_fct_info(fct_type, exception)
True
SmtInterface.add_function: exception :  -> Integer
(|signature| = 182) get_fct_info(fct_type, exception)
True
(|signature| = 182) get_fct_info(fct_type, executing_contract)
True
SmtInterface.add_function: executing_contract : Integer -> User
(|signature| = 182) get_fct_info(fct_type, executing_contract)
True
(|signature| = 182) get_fct_info(fct_type, executing_function)
True
SmtInterface.add_function: executing_function : Integer -> Function
(|signature| = 182) get_fct_info(fct_type, executing_function)
True
(|signature| = 182) get_fct_info(fct_type, instruction_pointer)
True
SmtInterface.add_function: instruction_pointer : Integer -> Integer
(|signature| = 182) get_fct_info(fct_type, instruction_pointer)
True
(|signature| = 182) get_fct_info(fct_type, payable)
True
SmtInterface.add_function: payable : Function -> Integer
(|signature| = 182) get_fct_info(fct_type, payable)
True
(|signature| = 182) get_fct_info(fct_type, received_airdrop)
True
SmtInterface.add_function: received_airdrop : User -> Integer
(|signature| = 182) get_fct_info(fct_type, received_airdrop)
True
(|signature| = 182) get_fct_info(fct_type, sender)
True
SmtInterface.add_function: sender : Integer -> User
(|signature| = 182) get_fct_info(fct_type, sender)
True
(|signature| = 182) get_fct_info(fct_type, user_balance)
True
SmtInterface.add_function: user_balance : User -> Integer
(|signature| = 182) get_fct_info(fct_type, user_balance)
True
---
static function != : 'a, 'a -> Boolean
static function * : Integer, Integer -> Integer
static function + : Integer, Integer -> Integer
static function - : Integer, Integer -> Integer
static function < : Integer, Integer -> Boolean
static function <= : Integer, Integer -> Boolean
static function = : 'a, 'a -> Boolean
static function > : Integer, Integer -> Boolean
static function >= : Integer, Integer -> Boolean
type Agent(0)
type Any(0)
type Bag(1)
type Boolean(0)
type D(0)
type D1(0)
type D2(0)
type D3(0)
type D4(0)
type D5(0)
type D6(0)
type D7(0)
type D8(0)
type D9(0)
type Function(0)
type GeneralInteger(0)
type InstructionPointer(0)
type Integer(0)
type Map(2)
type MoneyAmount(0)
type Powerset(1)
type Reserve(0)
type Rule(0)
type Seq(1)
type StackLayer(0)
type String(0)
type Undef(0)
type User(0)
static function a : Integer, Integer -> Integer
static function abs : Real -> Real
static function abs : Integer -> Integer
static function abs : Natural -> Natural
static function absenceAfter : Integer, Integer -> Integer
static function absenceAfterUntil : Integer, Integer, Integer -> Integer
static function absenceBefore : Integer, Integer -> Integer
static function absenceBetween : Integer, Integer, Integer -> Integer
static function absenceG : Integer -> Integer
static function af : Integer -> Integer
static function ag : Integer -> Integer
static function airdrop :  -> User
controlled function airdrop_amount :  -> Integer
static function allin : Powerset('D), Powerset('D) -> Integer
controlled function amount : Integer -> Integer
static function and : Boolean, Boolean -> Boolean
static function ap : Integer, Integer -> Integer
static function append : Seq('D), 'D -> Seq('D)
static function asBag : Powerset('D) -> Bag('D)
static function asBag : Seq('D) -> Bag('D)
static function asSequence : Powerset('D) -> Seq('D)
static function asSequence : Bag('D) -> Seq('D)
static function asSet : Seq('D) -> Powerset('D)
static function asSet : Bag('D) -> Powerset('D)
static function assign : Map('D1, 'D2), 'D1, 'D2 -> Map('D1, 'D2)
static function at : Seq('D), Natural -> 'D
static function at : Map('D1, 'D2), 'D1 -> 'D2
static function at : Prod('D1, 'D2), Natural -> 'Any
static function at : Prod('D1, 'D2, 'D3), Natural -> 'Any
static function at : Prod('D1, 'D2, 'D3, 'D4), Natural -> 'Any
static function attack :  -> Function
static function attacker :  -> User
static function aw : Integer, Integer -> Integer
static function ax : Integer -> Integer
static function axN : Integer, Natural -> Integer
controlled function balance : User -> Integer
controlled function boolean_return :  -> Integer
static function can_receive_airdrop :  -> Function
controlled function can_receive_airdrop_return :  -> Integer
static function chooseone : Powerset('D) -> 'D
static function concat : String, String -> String
static function contains : String, String -> Integer
static function contains : Powerset('D), 'D -> Integer
static function contains : Seq('D), 'D -> Integer
static function contains : Bag('D), 'D -> Integer
static function count : Seq('D), 'D -> Natural
static function count : Bag('D), 'D -> Natural
static function currTimeMillisecs :  -> Integer
static function currTimeNanosecs :  -> Integer
static function currTimeSecs :  -> Integer
controlled function current_layer :  -> Integer
controlled function destroyed : User -> Integer
static function difference : Powerset('D), Powerset('D) -> Powerset('D)
static function div : Integer, Integer -> Integer
static function e : Integer, Integer -> Integer
static function ef : Integer -> Integer
static function eg : Integer -> Integer
static function eighth : 'D1, 'D2, 'D3, 'D4, 'D5, 'D6, 'D7, 'D8 -> 'D8
static function eighth : 'D1, 'D2, 'D3, 'D4, 'D5, 'D6, 'D7, 'D8, 'D9 -> 'D8
static function eq : 'D, 'D -> Integer
static function eq : Natural, Integer -> Integer
static function eq : Integer, Natural -> Integer
static function eq : Real, Natural -> Integer
static function eq : Natural, Real -> Integer
static function eq : Real, Integer -> Integer
static function eq : Integer, Real -> Integer
static function eq : Agent, Agent -> Integer
static function equality : Powerset('D), Powerset('D) -> Integer
static function ew : Integer, Integer -> Integer
static function ex : Integer -> Integer
static function exN : Integer, Natural -> Integer
controlled function exception :  -> Integer
static function excluding : Powerset('D), 'D -> Powerset('D)
static function excluding : Seq('D), 'D -> Seq('D)
static function excluding : Bag('D), 'D -> Bag('D)
controlled function executing_contract : Integer -> User
controlled function executing_function : Integer -> Function
static function fifth : 'D1, 'D2, 'D3, 'D4, 'D5 -> 'D5
static function fifth : 'D1, 'D2, 'D3, 'D4, 'D5, 'D6 -> 'D5
static function fifth : 'D1, 'D2, 'D3, 'D4, 'D5, 'D6, 'D7 -> 'D5
static function fifth : 'D1, 'D2, 'D3, 'D4, 'D5, 'D6, 'D7, 'D8 -> 'D5
static function fifth : 'D1, 'D2, 'D3, 'D4, 'D5, 'D6, 'D7, 'D8, 'D9 -> 'D5
static function first : Seq('D) -> 'D
static function first : 'D1, 'D2 -> 'D1
static function first : 'D1, 'D2, 'D3 -> 'D1
static function first : 'D1, 'D2, 'D3, 'D4 -> 'D1
static function first : 'D1, 'D2, 'D3, 'D4, 'D5 -> 'D1
static function first : 'D1, 'D2, 'D3, 'D4, 'D5, 'D6 -> 'D1
static function first : 'D1, 'D2, 'D3, 'D4, 'D5, 'D6, 'D7 -> 'D1
static function first : 'D1, 'D2, 'D3, 'D4, 'D5, 'D6, 'D7, 'D8 -> 'D1
static function first : 'D1, 'D2, 'D3, 'D4, 'D5, 'D6, 'D7, 'D8, 'D9 -> 'D1
static function floor : Real -> Integer
static function fourth : 'D1, 'D2, 'D3, 'D4 -> 'D4
static function fourth : 'D1, 'D2, 'D3, 'D4, 'D5 -> 'D4
static function fourth : 'D1, 'D2, 'D3, 'D4, 'D5, 'D6 -> 'D4
static function fourth : 'D1, 'D2, 'D3, 'D4, 'D5, 'D6, 'D7 -> 'D4
static function fourth : 'D1, 'D2, 'D3, 'D4, 'D5, 'D6, 'D7, 'D8 -> 'D4
static function fourth : 'D1, 'D2, 'D3, 'D4, 'D5, 'D6, 'D7, 'D8, 'D9 -> 'D4
static function ge : Real, Real -> Integer
static function ge : Integer, Integer -> Integer
static function ge : Natural, Natural -> Integer
static function ge : Char, Char -> Integer
static function getAgent : String -> Agent
static function gt : Real, Real -> Integer
static function gt : Integer, Integer -> Integer
static function gt : Natural, Integer -> Integer
static function gt : Integer, Natural -> Integer
static function gt : Natural, Natural -> Integer
static function gt : Char, Char -> Integer
static function id : Agent -> String
static function idiv : Integer, Integer -> Integer
static function idiv : Natural, Natural -> Natural
static function iff : Boolean, Boolean -> Boolean
static function im : Complex -> Real
static function implies : Boolean, Boolean -> Boolean
static function including : Powerset('D), 'D -> Powerset('D)
static function including : Bag('D), 'D -> Bag('D)
static function indexOf : Seq('D), 'D -> Integer
static function indexOf : Prod('D1, 'D2), 'Any -> Integer
static function indexOf : Prod('D1, 'D2, 'D3), 'Any -> Integer
static function indexOf : Prod('D1, 'D2, 'D3, 'D4), 'Any -> Integer
static function insertAt : Seq('D), Natural, 'D -> Seq('D)
controlled function instruction_pointer : Integer -> Integer
static function intersection : Powerset('D), Powerset('D) -> Powerset('D)
static function intersection : Powerset('D), Bag('D) -> Powerset('D)
static function intersection : Bag('D), Bag('D) -> Bag('D)
static function intersection : Bag('D), Powerset('D) -> Bag('D)
static function isDef : 'D -> Integer
static function isEmpty : Powerset('D) -> Integer
static function isEmpty : Seq('D) -> Integer
static function isUndef : 'D -> Integer
derived function is_contract : User -> Integer
static function iszero : Complex -> Integer
static function iton : Integer -> Natural
static function itor : Integer -> Real
static function last : Seq('D) -> 'D
static function le : Real, Real -> Integer
static function le : Integer, Integer -> Integer
static function le : Natural, Natural -> Integer
static function le : Char, Char -> Integer
static function length : Seq('D) -> Integer
static function lt : Real, Real -> Integer
static function lt : Integer, Integer -> Integer
static function lt : Natural, Natural -> Integer
static function lt : Char, Char -> Integer
static function max : Real, Real -> Real
static function max : Integer, Integer -> Integer
static function max : Natural, Natural -> Natural
static function merge : Map('D1, 'D2), Map('D1, 'D2) -> Map('D1, 'D2)
static function min : Real, Real -> Real
static function min : Integer, Integer -> Integer
static function min : Natural, Natural -> Natural
static function minus : Complex, Complex -> Complex
static function minus : Complex -> Complex
static function minus : Real -> Real
static function minus : Real, Real -> Real
static function minus : Integer -> Integer
static function minus : Integer, Integer -> Integer
static function minus : Natural, Natural -> Integer
static function mod : Integer, Integer -> Integer
static function mod : Integer, Natural -> Integer
static function mod : Natural, Integer -> Integer
static function mod : Natural, Natural -> Natural
static function mult : Complex, Complex -> Complex
static function mult : Real, Real -> Real
static function mult : Integer, Integer -> Integer
static function mult : Natural, Integer -> Integer
static function mult : Integer, Natural -> Integer
static function mult : Natural, Natural -> Natural
static function neq : 'D, 'D -> Integer
static function neq : Agent, Agent -> Integer
static function ninth : 'D1, 'D2, 'D3, 'D4, 'D5, 'D6, 'D7, 'D8, 'D9 -> 'D9
static function none :  -> Function
static function norm : Complex -> Complex
static function not : Boolean -> Boolean
static function notEmpty : Powerset('D) -> Integer
static function notallin : Powerset('D), Powerset('D) -> Integer
static function notin : Powerset('D), 'D -> Integer
static function ntoi : Natural -> Integer
static function ntor : Natural -> Real
static function or : Boolean, Boolean -> Boolean
controlled function payable : Function -> Integer
static function pb : Integer, Integer, Integer -> Integer
static function plus : Complex, Complex -> Complex
static function plus : Real -> Real
static function plus : Real, Real -> Real
static function plus : Integer -> Integer
static function plus : Integer, Integer -> Integer
static function plus : Natural, Natural -> Natural
static function plus : String, String -> String
static function pre : 'D -> 'D
static function prepend : 'D, Seq('D) -> Seq('D)
static function print : 'D -> Integer
static function print : 'D, 'D1 -> Integer
static function print : 'D, 'D1, 'D2 -> Integer
static function print : 'D, 'D1, 'D2, 'D3 -> Integer
static function print : 'D, 'D1, 'D2, 'D3, 'D4 -> Integer
static function print : 'D, 'D1, 'D2, 'D3, 'D4, 'D5 -> Integer
static function print : 'D, 'D1, 'D2, 'D3, 'D4, 'D5, 'D6 -> Integer
static function print : 'D, 'D1, 'D2, 'D3, 'D4, 'D5, 'D6, 'D7 -> Integer
static function print : 'D, 'D1, 'D2, 'D3, 'D4, 'D5, 'D6, 'D7, 'D8 -> Integer
static function print : 'D, 'D1, 'D2, 'D3, 'D4, 'D5, 'D6, 'D7, 'D8, 'D9 -> Integer
static function program : Agent -> Rule
static function pwr : Real, Real -> Real
monitored function random_amount :  -> Integer
monitored function random_function :  -> Function
monitored function random_user :  -> User
static function range : Natural, Natural -> Powerset(Natural)
static function re : Complex -> Real
static function receive_airdrop :  -> Function
controlled function received_airdrop : User -> Integer
static function replaceAt : Seq('D), Natural, 'D -> Seq('D)
controlled function result :  -> 'Any
static function round : Real -> Integer
static function rtoi : Real -> Integer
static function rton : Real -> Natural
static function second : 'D1, 'D2 -> 'D2
static function second : 'D1, 'D2, 'D3 -> 'D2
static function second : 'D1, 'D2, 'D3, 'D4 -> 'D2
static function second : 'D1, 'D2, 'D3, 'D4, 'D5 -> 'D2
static function second : 'D1, 'D2, 'D3, 'D4, 'D5, 'D6 -> 'D2
static function second : 'D1, 'D2, 'D3, 'D4, 'D5, 'D6, 'D7 -> 'D2
static function second : 'D1, 'D2, 'D3, 'D4, 'D5, 'D6, 'D7, 'D8 -> 'D2
static function second : 'D1, 'D2, 'D3, 'D4, 'D5, 'D6, 'D7, 'D8, 'D9 -> 'D2
controlled function self :  -> Agent
controlled function sender : Integer -> User
static function seventh : 'D1, 'D2, 'D3, 'D4, 'D5, 'D6, 'D7 -> 'D7
static function seventh : 'D1, 'D2, 'D3, 'D4, 'D5, 'D6, 'D7, 'D8 -> 'D7
static function seventh : 'D1, 'D2, 'D3, 'D4, 'D5, 'D6, 'D7, 'D8, 'D9 -> 'D7
static function sixth : 'D1, 'D2, 'D3, 'D4, 'D5, 'D6 -> 'D6
static function sixth : 'D1, 'D2, 'D3, 'D4, 'D5, 'D6, 'D7 -> 'D6
static function sixth : 'D1, 'D2, 'D3, 'D4, 'D5, 'D6, 'D7, 'D8 -> 'D6
static function sixth : 'D1, 'D2, 'D3, 'D4, 'D5, 'D6, 'D7, 'D8, 'D9 -> 'D6
static function size : String -> Integer
static function size : Powerset('D) -> Integer
static function split : String, String -> Seq(String)
static function sqrt : Real -> Real
static function subSequence : Seq('D), Natural, Natural -> Seq('D)
static function subString : String, Integer, Integer -> String
static function sum : Powerset('D) -> 'D
static function sum : Bag('D) -> 'D
static function symmetricDifference : Powerset('D), Powerset('D) -> Powerset('D)
static function tail : Seq('D) -> Seq('D)
static function third : 'D1, 'D2, 'D3 -> 'D3
static function third : 'D1, 'D2, 'D3, 'D4 -> 'D3
static function third : 'D1, 'D2, 'D3, 'D4, 'D5 -> 'D3
static function third : 'D1, 'D2, 'D3, 'D4, 'D5, 'D6 -> 'D3
static function third : 'D1, 'D2, 'D3, 'D4, 'D5, 'D6, 'D7 -> 'D3
static function third : 'D1, 'D2, 'D3, 'D4, 'D5, 'D6, 'D7, 'D8 -> 'D3
static function third : 'D1, 'D2, 'D3, 'D4, 'D5, 'D6, 'D7, 'D8, 'D9 -> 'D3
static function toChar : String -> Char
static function toComplex : String -> Complex
static function toInteger : String -> Integer
static function toLower : String -> String
static function toNatural : String -> Natural
static function toReal : String -> Real
static function toString : Complex -> String
static function toString : Real -> String
static function toString : Integer -> String
static function toString : Natural -> String
static function toString : Char -> String
static function toString : 'D -> String
static function toUpper : String -> String
static function union : Powerset('D), Powerset('D) -> Powerset('D)
static function union : Powerset('D), Bag('D) -> Bag('D)
static function union : Powerset('D), Powerset('D1) -> Powerset('D2)
static function union : Seq('D), Seq('D) -> Seq('D)
static function union : Bag('D), Bag('D) -> Bag('D)
static function union : Bag('D), Powerset('D) -> Bag('D)
static function user :  -> User
controlled function user_balance : User -> Integer
static function xor : Integer, Integer -> Integer

---
symbolic_execution
---
static function != : 'a, 'a -> Boolean
static function * : Integer, Integer -> Integer
static function + : Integer, Integer -> Integer
static function - : Integer, Integer -> Integer
static function < : Integer, Integer -> Boolean
static function <= : Integer, Integer -> Boolean
static function = : 'a, 'a -> Boolean
static function > : Integer, Integer -> Boolean
static function >= : Integer, Integer -> Boolean
type Agent(0)
type Any(0)
type Bag(1)
type Boolean(0)
type D(0)
type D1(0)
type D2(0)
type D3(0)
type D4(0)
type D5(0)
type D6(0)
type D7(0)
type D8(0)
type D9(0)
type Function(0)
type GeneralInteger(0)
type InstructionPointer(0)
type Integer(0)
type Map(2)
type MoneyAmount(0)
type Powerset(1)
type Reserve(0)
type Rule(0)
type Seq(1)
type StackLayer(0)
type String(0)
type Undef(0)
type User(0)
static function a : Integer, Integer -> Integer
static function abs : Real -> Real
static function abs : Integer -> Integer
static function abs : Natural -> Natural
static function absenceAfter : Integer, Integer -> Integer
static function absenceAfterUntil : Integer, Integer, Integer -> Integer
static function absenceBefore : Integer, Integer -> Integer
static function absenceBetween : Integer, Integer, Integer -> Integer
static function absenceG : Integer -> Integer
static function af : Integer -> Integer
static function ag : Integer -> Integer
static function airdrop :  -> User
controlled function airdrop_amount :  -> Integer
static function allin : Powerset('D), Powerset('D) -> Integer
controlled function amount : Integer -> Integer
static function and : Boolean, Boolean -> Boolean
static function ap : Integer, Integer -> Integer
static function append : Seq('D), 'D -> Seq('D)
static function asBag : Powerset('D) -> Bag('D)
static function asBag : Seq('D) -> Bag('D)
static function asSequence : Powerset('D) -> Seq('D)
static function asSequence : Bag('D) -> Seq('D)
static function asSet : Seq('D) -> Powerset('D)
static function asSet : Bag('D) -> Powerset('D)
static function assign : Map('D1, 'D2), 'D1, 'D2 -> Map('D1, 'D2)
static function at : Seq('D), Natural -> 'D
static function at : Map('D1, 'D2), 'D1 -> 'D2
static function at : Prod('D1, 'D2), Natural -> 'Any
static function at : Prod('D1, 'D2, 'D3), Natural -> 'Any
static function at : Prod('D1, 'D2, 'D3, 'D4), Natural -> 'Any
static function attack :  -> Function
static function attacker :  -> User
static function aw : Integer, Integer -> Integer
static function ax : Integer -> Integer
static function axN : Integer, Natural -> Integer
controlled function balance : User -> Integer
controlled function boolean_return :  -> Integer
static function can_receive_airdrop :  -> Function
controlled function can_receive_airdrop_return :  -> Integer
static function chooseone : Powerset('D) -> 'D
static function concat : String, String -> String
static function contains : String, String -> Integer
static function contains : Powerset('D), 'D -> Integer
static function contains : Seq('D), 'D -> Integer
static function contains : Bag('D), 'D -> Integer
static function count : Seq('D), 'D -> Natural
static function count : Bag('D), 'D -> Natural
static function currTimeMillisecs :  -> Integer
static function currTimeNanosecs :  -> Integer
static function currTimeSecs :  -> Integer
controlled function current_layer :  -> Integer
controlled function destroyed : User -> Integer
static function difference : Powerset('D), Powerset('D) -> Powerset('D)
static function div : Integer, Integer -> Integer
static function e : Integer, Integer -> Integer
static function ef : Integer -> Integer
static function eg : Integer -> Integer
static function eighth : 'D1, 'D2, 'D3, 'D4, 'D5, 'D6, 'D7, 'D8 -> 'D8
static function eighth : 'D1, 'D2, 'D3, 'D4, 'D5, 'D6, 'D7, 'D8, 'D9 -> 'D8
static function eq : 'D, 'D -> Integer
static function eq : Natural, Integer -> Integer
static function eq : Integer, Natural -> Integer
static function eq : Real, Natural -> Integer
static function eq : Natural, Real -> Integer
static function eq : Real, Integer -> Integer
static function eq : Integer, Real -> Integer
static function eq : Agent, Agent -> Integer
static function equality : Powerset('D), Powerset('D) -> Integer
static function ew : Integer, Integer -> Integer
static function ex : Integer -> Integer
static function exN : Integer, Natural -> Integer
controlled function exception :  -> Integer
static function excluding : Powerset('D), 'D -> Powerset('D)
static function excluding : Seq('D), 'D -> Seq('D)
static function excluding : Bag('D), 'D -> Bag('D)
controlled function executing_contract : Integer -> User
controlled function executing_function : Integer -> Function
static function fifth : 'D1, 'D2, 'D3, 'D4, 'D5 -> 'D5
static function fifth : 'D1, 'D2, 'D3, 'D4, 'D5, 'D6 -> 'D5
static function fifth : 'D1, 'D2, 'D3, 'D4, 'D5, 'D6, 'D7 -> 'D5
static function fifth : 'D1, 'D2, 'D3, 'D4, 'D5, 'D6, 'D7, 'D8 -> 'D5
static function fifth : 'D1, 'D2, 'D3, 'D4, 'D5, 'D6, 'D7, 'D8, 'D9 -> 'D5
static function first : Seq('D) -> 'D
static function first : 'D1, 'D2 -> 'D1
static function first : 'D1, 'D2, 'D3 -> 'D1
static function first : 'D1, 'D2, 'D3, 'D4 -> 'D1
static function first : 'D1, 'D2, 'D3, 'D4, 'D5 -> 'D1
static function first : 'D1, 'D2, 'D3, 'D4, 'D5, 'D6 -> 'D1
static function first : 'D1, 'D2, 'D3, 'D4, 'D5, 'D6, 'D7 -> 'D1
static function first : 'D1, 'D2, 'D3, 'D4, 'D5, 'D6, 'D7, 'D8 -> 'D1
static function first : 'D1, 'D2, 'D3, 'D4, 'D5, 'D6, 'D7, 'D8, 'D9 -> 'D1
static function floor : Real -> Integer
static function fourth : 'D1, 'D2, 'D3, 'D4 -> 'D4
static function fourth : 'D1, 'D2, 'D3, 'D4, 'D5 -> 'D4
static function fourth : 'D1, 'D2, 'D3, 'D4, 'D5, 'D6 -> 'D4
static function fourth : 'D1, 'D2, 'D3, 'D4, 'D5, 'D6, 'D7 -> 'D4
static function fourth : 'D1, 'D2, 'D3, 'D4, 'D5, 'D6, 'D7, 'D8 -> 'D4
static function fourth : 'D1, 'D2, 'D3, 'D4, 'D5, 'D6, 'D7, 'D8, 'D9 -> 'D4
static function ge : Real, Real -> Integer
static function ge : Integer, Integer -> Integer
static function ge : Natural, Natural -> Integer
static function ge : Char, Char -> Integer
static function getAgent : String -> Agent
static function gt : Real, Real -> Integer
static function gt : Integer, Integer -> Integer
static function gt : Natural, Integer -> Integer
static function gt : Integer, Natural -> Integer
static function gt : Natural, Natural -> Integer
static function gt : Char, Char -> Integer
static function id : Agent -> String
static function idiv : Integer, Integer -> Integer
static function idiv : Natural, Natural -> Natural
static function iff : Boolean, Boolean -> Boolean
static function im : Complex -> Real
static function implies : Boolean, Boolean -> Boolean
static function including : Powerset('D), 'D -> Powerset('D)
static function including : Bag('D), 'D -> Bag('D)
static function indexOf : Seq('D), 'D -> Integer
static function indexOf : Prod('D1, 'D2), 'Any -> Integer
static function indexOf : Prod('D1, 'D2, 'D3), 'Any -> Integer
static function indexOf : Prod('D1, 'D2, 'D3, 'D4), 'Any -> Integer
static function insertAt : Seq('D), Natural, 'D -> Seq('D)
controlled function instruction_pointer : Integer -> Integer
static function intersection : Powerset('D), Powerset('D) -> Powerset('D)
static function intersection : Powerset('D), Bag('D) -> Powerset('D)
static function intersection : Bag('D), Bag('D) -> Bag('D)
static function intersection : Bag('D), Powerset('D) -> Bag('D)
static function isDef : 'D -> Integer
static function isEmpty : Powerset('D) -> Integer
static function isEmpty : Seq('D) -> Integer
static function isUndef : 'D -> Integer
derived function is_contract : User -> Integer
static function iszero : Complex -> Integer
static function iton : Integer -> Natural
static function itor : Integer -> Real
static function last : Seq('D) -> 'D
static function le : Real, Real -> Integer
static function le : Integer, Integer -> Integer
static function le : Natural, Natural -> Integer
static function le : Char, Char -> Integer
static function length : Seq('D) -> Integer
static function lt : Real, Real -> Integer
static function lt : Integer, Integer -> Integer
static function lt : Natural, Natural -> Integer
static function lt : Char, Char -> Integer
static function max : Real, Real -> Real
static function max : Integer, Integer -> Integer
static function max : Natural, Natural -> Natural
static function merge : Map('D1, 'D2), Map('D1, 'D2) -> Map('D1, 'D2)
static function min : Real, Real -> Real
static function min : Integer, Integer -> Integer
static function min : Natural, Natural -> Natural
static function minus : Complex, Complex -> Complex
static function minus : Complex -> Complex
static function minus : Real -> Real
static function minus : Real, Real -> Real
static function minus : Integer -> Integer
static function minus : Integer, Integer -> Integer
static function minus : Natural, Natural -> Integer
static function mod : Integer, Integer -> Integer
static function mod : Integer, Natural -> Integer
static function mod : Natural, Integer -> Integer
static function mod : Natural, Natural -> Natural
static function mult : Complex, Complex -> Complex
static function mult : Real, Real -> Real
static function mult : Integer, Integer -> Integer
static function mult : Natural, Integer -> Integer
static function mult : Integer, Natural -> Integer
static function mult : Natural, Natural -> Natural
static function neq : 'D, 'D -> Integer
static function neq : Agent, Agent -> Integer
static function ninth : 'D1, 'D2, 'D3, 'D4, 'D5, 'D6, 'D7, 'D8, 'D9 -> 'D9
static function none :  -> Function
static function norm : Complex -> Complex
static function not : Boolean -> Boolean
static function notEmpty : Powerset('D) -> Integer
static function notallin : Powerset('D), Powerset('D) -> Integer
static function notin : Powerset('D), 'D -> Integer
static function ntoi : Natural -> Integer
static function ntor : Natural -> Real
static function or : Boolean, Boolean -> Boolean
controlled function payable : Function -> Integer
static function pb : Integer, Integer, Integer -> Integer
static function plus : Complex, Complex -> Complex
static function plus : Real -> Real
static function plus : Real, Real -> Real
static function plus : Integer -> Integer
static function plus : Integer, Integer -> Integer
static function plus : Natural, Natural -> Natural
static function plus : String, String -> String
static function pre : 'D -> 'D
static function prepend : 'D, Seq('D) -> Seq('D)
static function print : 'D -> Integer
static function print : 'D, 'D1 -> Integer
static function print : 'D, 'D1, 'D2 -> Integer
static function print : 'D, 'D1, 'D2, 'D3 -> Integer
static function print : 'D, 'D1, 'D2, 'D3, 'D4 -> Integer
static function print : 'D, 'D1, 'D2, 'D3, 'D4, 'D5 -> Integer
static function print : 'D, 'D1, 'D2, 'D3, 'D4, 'D5, 'D6 -> Integer
static function print : 'D, 'D1, 'D2, 'D3, 'D4, 'D5, 'D6, 'D7 -> Integer
static function print : 'D, 'D1, 'D2, 'D3, 'D4, 'D5, 'D6, 'D7, 'D8 -> Integer
static function print : 'D, 'D1, 'D2, 'D3, 'D4, 'D5, 'D6, 'D7, 'D8, 'D9 -> Integer
static function program : Agent -> Rule
static function pwr : Real, Real -> Real
monitored function random_amount :  -> Integer
monitored function random_function :  -> Function
monitored function random_user :  -> User
static function range : Natural, Natural -> Powerset(Natural)
static function re : Complex -> Real
static function receive_airdrop :  -> Function
controlled function received_airdrop : User -> Integer
static function replaceAt : Seq('D), Natural, 'D -> Seq('D)
controlled function result :  -> 'Any
static function round : Real -> Integer
static function rtoi : Real -> Integer
static function rton : Real -> Natural
static function second : 'D1, 'D2 -> 'D2
static function second : 'D1, 'D2, 'D3 -> 'D2
static function second : 'D1, 'D2, 'D3, 'D4 -> 'D2
static function second : 'D1, 'D2, 'D3, 'D4, 'D5 -> 'D2
static function second : 'D1, 'D2, 'D3, 'D4, 'D5, 'D6 -> 'D2
static function second : 'D1, 'D2, 'D3, 'D4, 'D5, 'D6, 'D7 -> 'D2
static function second : 'D1, 'D2, 'D3, 'D4, 'D5, 'D6, 'D7, 'D8 -> 'D2
static function second : 'D1, 'D2, 'D3, 'D4, 'D5, 'D6, 'D7, 'D8, 'D9 -> 'D2
controlled function self :  -> Agent
controlled function sender : Integer -> User
static function seventh : 'D1, 'D2, 'D3, 'D4, 'D5, 'D6, 'D7 -> 'D7
static function seventh : 'D1, 'D2, 'D3, 'D4, 'D5, 'D6, 'D7, 'D8 -> 'D7
static function seventh : 'D1, 'D2, 'D3, 'D4, 'D5, 'D6, 'D7, 'D8, 'D9 -> 'D7
static function sixth : 'D1, 'D2, 'D3, 'D4, 'D5, 'D6 -> 'D6
static function sixth : 'D1, 'D2, 'D3, 'D4, 'D5, 'D6, 'D7 -> 'D6
static function sixth : 'D1, 'D2, 'D3, 'D4, 'D5, 'D6, 'D7, 'D8 -> 'D6
static function sixth : 'D1, 'D2, 'D3, 'D4, 'D5, 'D6, 'D7, 'D8, 'D9 -> 'D6
static function size : String -> Integer
static function size : Powerset('D) -> Integer
static function split : String, String -> Seq(String)
static function sqrt : Real -> Real
static function subSequence : Seq('D), Natural, Natural -> Seq('D)
static function subString : String, Integer, Integer -> String
static function sum : Powerset('D) -> 'D
static function sum : Bag('D) -> 'D
static function symmetricDifference : Powerset('D), Powerset('D) -> Powerset('D)
static function tail : Seq('D) -> Seq('D)
static function third : 'D1, 'D2, 'D3 -> 'D3
static function third : 'D1, 'D2, 'D3, 'D4 -> 'D3
static function third : 'D1, 'D2, 'D3, 'D4, 'D5 -> 'D3
static function third : 'D1, 'D2, 'D3, 'D4, 'D5, 'D6 -> 'D3
static function third : 'D1, 'D2, 'D3, 'D4, 'D5, 'D6, 'D7 -> 'D3
static function third : 'D1, 'D2, 'D3, 'D4, 'D5, 'D6, 'D7, 'D8 -> 'D3
static function third : 'D1, 'D2, 'D3, 'D4, 'D5, 'D6, 'D7, 'D8, 'D9 -> 'D3
static function toChar : String -> Char
static function toComplex : String -> Complex
static function toInteger : String -> Integer
static function toLower : String -> String
static function toNatural : String -> Natural
static function toReal : String -> Real
static function toString : Complex -> String
static function toString : Real -> String
static function toString : Integer -> String
static function toString : Natural -> String
static function toString : Char -> String
static function toString : 'D -> String
static function toUpper : String -> String
static function union : Powerset('D), Powerset('D) -> Powerset('D)
static function union : Powerset('D), Bag('D) -> Bag('D)
static function union : Powerset('D), Powerset('D1) -> Powerset('D2)
static function union : Seq('D), Seq('D) -> Seq('D)
static function union : Bag('D), Bag('D) -> Bag('D)
static function union : Bag('D), Powerset('D) -> Bag('D)
static function user :  -> User
controlled function user_balance : User -> Integer
static function xor : Integer, Integer -> Integer

---
(|signature| = 182) get_fct_info(fct_type, current_layer)
True
(|signature| = 182) get_fct_info(fct_type, executing_contract)
True
(|signature| = 182) get_fct_info(fct_type, is_contract)
True
(|signature| = 182) get_fct_info(fct_type, not)
True
|signature|=182 | s_eval_term     not (is_contract (executing_contract (current_layer)))

|signature|=182 | eval_app_term     not

|signature|=182 | eval_app_term     is_contract

|signature|=182 | eval_app_term     executing_contract

|signature|=182 | eval_app_term     current_layer

|signature|=182 | SymbState.interpretation of FctName "current_layer"

(|signature| = 182) get_fct_info(fct_kind, current_layer)
True
|signature|=182 | State.interpretation of IntConst 0

|signature|=182 | SymbState.interpretation of FctName "executing_contract"

(|signature| = 182) get_fct_info(fct_kind, executing_contract)
True
|signature|=182 | State.interpretation of FctName "="

|signature|=182 | State.interpretation of IntConst 0

(|signature| = 182) get_fct_info(fct_kind, =)
True
|signature|=182 | State.interpretation of FctName "user"

(|signature| = 182) get_fct_info(fct_kind, user)
True
(|signature| = 182) get_fct_info(fct_kind, is_contract)
True
exception:
arguments of dynamic function 'is_contract' must be fully evaluable for unambiguous determination of a location
('is_contract (initial[executing_contract, (0)])' found instead)
